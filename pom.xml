<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.2.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>it.almaviva.aifa</groupId>
	<artifactId>skeleton-project</artifactId>
	<version>0.0.1</version>
	<packaging>${packaging.style}</packaging>
	<description></description>

	<properties>
		<API.version>1.0.0</API.version>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sonar.language>java</sonar.language>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.coverage.jacoco.xmlReportPaths>${project.build.directory}/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
		<sonar.jacoco.reportsPaths>${project.build.directory}/jacoco-it.exec</sonar.jacoco.reportsPaths>
		<sonar.tests>src/test/java</sonar.tests>
		<sonar.projectKey>skeleton-project</sonar.projectKey>
		<!-- <sonar.login>SONAR_TOKEN</sonar.login> -->
	</properties>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- <dependency> -->
		<!-- <groupId>org.springframework.boot</groupId> -->
		<!-- <artifactId>spring-boot-starter-data-jpa</artifactId> -->
		<!-- </dependency> -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>2.3.9</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.4.3</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.oracle.database.jdbc</groupId>
			<artifactId>ojdbc8</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>

		<dependency>
			<groupId>com.google.firebase</groupId>
			<artifactId>firebase-admin</artifactId>
			<version>7.1.0</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Hoxton.SR9</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<profiles>

		<profile>
			<id>dev</id>
			<properties>
				<packaging.style>jar</packaging.style>
				<springProfile>dev</springProfile>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>

		<profile>
			<id>coll</id>
			<properties>
				<packaging.style>jar</packaging.style>
				<springProfile>coll</springProfile>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
		</profile>

		<profile>
			<id>prod</id>
			<properties>
				<packaging.style>jar</packaging.style>
				<springProfile>prod</springProfile>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
		</profile>

		<profile>
			<id>sonar</id>
			<properties>
				<packaging.style>jar</packaging.style>
				<springProfile>dev</springProfile>
				<sonar.host.url>
					http://sonarqube2.almaviva.it:9000
				</sonar.host.url>
				<sonar.coverage.exclusions>
					**/utils/**/*,
					**/aop/**/*,
					**/exceptions/**/*,
					**/dto/**/*,
					**/entity/**/*,
					**/controller/**/*,
					**/CORSFilter.java,
					**/*Application.java
				</sonar.coverage.exclusions>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.8.1</version>
						<executions>
							<execution>
								<id>default-prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${project.build.directory}/jacoco-it.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>default-report</id>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
									<outputEncoding>UTF-8</outputEncoding>
									<outputDirectory>${project.build.directory}</outputDirectory>
									<excludes>
										<exclude>**/utils/**/*</exclude>
										<exclude>**/aop/**/*</exclude>
										<exclude>**/exceptions/**/*</exclude>
										<exclude>**/MainApplication.class</exclude>
										<exclude>**/dto/**/*</exclude>
										<exclude>**/entity/**/*</exclude>
										<exclude>**/config/CORSFilter.class</exclude>
										<exclude>**/controller/**</exclude>
									</excludes>
								</configuration>
							</execution>
							<execution>
								<id>default-check</id>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
									<rules>
										<rule>
											<element>BUNDLE</element>
											<limits>
												<limit>
													<counter>INSTRUCTION</counter>
													<value>COVEREDRATIO</value>
												</limit>
											</limits>
										</rule>
									</rules>
									<excludes>
										<exclude>**/utils/**/*</exclude>
										<exclude>**/aop/**/*</exclude>
										<exclude>**/exceptions/**/*</exclude>
										<exclude>**/MainApplication.class</exclude>
										<exclude>**/dto/**/*</exclude>
										<exclude>**/entity/**/*</exclude>
										<exclude>**/config/CORSFilter.class</exclude>
										<exclude>**/controller/**</exclude>
									</excludes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>


	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<finalName>${project.artifactId}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.*</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/conf/${springProfile}</directory>
				<includes>
					<include>*.*</include>
				</includes>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>

</project>
